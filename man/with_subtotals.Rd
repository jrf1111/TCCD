% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/with_subtotals.R
\name{with_subtotals}
\alias{with_subtotals}
\title{Add subtotals to grouped \code{dplyr} operations}
\usage{
with_subtotals(df)
}
\arguments{
\item{df}{A grouped data frame or data frame extension (e.g. a tibble)}
}
\value{
A grouped object of the same type as \code{df} but with additional rows that contain group (sub)totals and grand totals.
}
\description{
Add subtotals to grouped \code{dplyr} operations
}
\note{
In order to create the extra subtotal and total groups, this function has two unfortunate side effects.  The first side effect is that it increases the number of rows of \code{df}. This may result in performance issues and/or exhaust available memory. It may, therefore, be advisable to pass a reduced version of \code{df} containing only the variables necessary to perform the desired operation(s), for example, by calling \code{select()} before \code{group_by(...) \%>\% with_subtotals()}.  The second side effect is that in order to create the total groups, it must \emph{make} the total group for each grouping variable.  Currently, this is achieved by (1) converting numeric variables to characters or adding a new level to factors then (2) adding the new \code{total_} group (a value that hopefully does not already exist in the grouping variable).  Future versions of this function will hopefully address these limitations.
}
\examples{

library(tidyverse)
library(data.table)

test = mtcars \%>\%
	group_by(cyl, am) \%>\%
	with_subtotals() \%>\%
	summarise(
	n = n(),
	mean_mpg = mean(mpg)
	) \%>\%
	ungroup()


#the old, long, and error prone way
test2 = data.table::rbindlist(
	list(
		mtcars \%>\%
			group_by(cyl, am) \%>\%
			summarise(
			n = n(),
			mean_mpg = mean(mpg)
			) \%>\%
			ungroup(),

		mtcars \%>\%
			group_by(cyl) \%>\%
			summarise(
			n = n(),
			mean_mpg = mean(mpg),
			am = "total_"
			) \%>\%
			ungroup(),

		mtcars \%>\%
			group_by(am) \%>\%
			summarise(
			n = n(),
			mean_mpg = mean(mpg),
			cyl = "total_"
			) \%>\%
			ungroup(),


		mtcars \%>\%
			summarise(
			n = n(),
			mean_mpg = mean(mpg),
			am = "total_",
			cyl = "total_"
			) \%>\%
			ungroup()
	),
	use.names = TRUE
)



test = test \%>\% arrange_all()
test2 = test2 \%>\% arrange_all()

all.equal(test, test2, check.attributes = FALSE)  #TRUE






}
